@startUML
scale 3
title 闭环流程
rectangle "实名制系统" {
    (uc001信息录入) as uc001
    (uc002招聘) as uc002
    (uc003培训) as uc003
    (uc004考勤) as uc004
    (uc005工资支付) as uc005
    (uc006离岗) as uc006
}

uc001 --> uc002
uc002 -> uc003
uc003 -> uc004
uc004 --> uc005
uc006 <- uc005
uc002 <-- uc006
@endUML

@startUMl
scale 3
title uc001信息录入用例
rectangle "实名信息系统" {
    (uc001信息录入) as uc001
    (uc001_1批量信息录入) as uc001_1
    (uc001_2关联实名身份) as uc001_2
}

uc001 --> uc001_1: 扩展
uc001 --> uc001_2: 扩展
@endUML

@startUML
scale 3
title uc001信息录入流程图
start
:工人进入公众号;
:工人打开实名认证小程序;
:选择录入新身份;
repeat
:录入新身份;
:提交身份;
:后台管理人员审核;
repeat while (审核未通过, 提示重新录入)
-> 审核通过;
:修改工人状态为完成认证;
end
@endUML

@startUML
scale 3
title uc001_1批量信息录入流程图
start
:管理员进入后台;
:管理员导入批量实名信息;
:系统批量生成实名信息;
repeat
:管理员审核实名信息;
if (实名信息) then (通过)
:修改工人实名认证状态;
end
else (未通过)
:修改工人实名信息;
@endUML

@startUML
scale 3
title uc001_2关联实名身份
start
:工人从管理员处获得关联密码;
:工人进入微信公众号;
:工人进入实名认证小程序;
:工人选择关联已有实名身份;
:工人完成关联;
repeat
if (是否关联成功) then (是)
:显示关联成功;
end
else (否)
:重新关联;
@endUMl

@startUML
scale 3
title uc001信息录入类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "批量实名认证列表" <003>
class 004 as "批量实名信息" <004>
class 005 as "关联密码" <005>

001 : id
001 : 微信 openid
001 : 实名信息
001 : 实名认证状态
001 : 录入实名信息()
001 : 关联实名信息()
001 : 修改实名信息()

002 : id
002 : 审核实名信息()
002 : 导入实名信息()

003 : id
003 : 实名信息
003 : 取出实名信息()

004 : id
004 : 工人id
004 : 实名认证状态
004 : 修改实名信息状态()

005 : id
005 : 密码
005 : 工人id
005 : 验证密码()

001 <-- 003: 包含
001 <-- 004: 包含
001 -> 002: 提交实名信息
001 <- 002: 审核
002 --> 003: 导入
004 <- 003: 生成
005 <-- 002: 生成
005 <-- 001: 验证
@endUML

@startUML
scale 3
title uc002招聘用例
rectangle "实名制系统" {
    (uc002招聘) as uc002
    (uc002_1发布招聘信息) as uc002_1
    (uc002_2应聘) as uc002_2
    (uc002_3甄选) as uc002_3
}

uc002 --> uc002_1: 包含
uc002 --> uc002_2: 包含
uc002 --> uc002_3: 包含

uc002_1 -> uc002_2
uc002_2 -> uc002_3
@endUMl

@startUML
scale 3
title uc002_1发布招聘信息流程图
start
:管理员录入项目信息;
:管理员录入岗位信息;
:管理员录入招聘信息;
:通过公众号向工作发送消息;
end
@endUMl

@startUMl
scale 3
title uc002_2应聘流程图
start
:工人查看招聘信息;
:工人管理岗位;
:工人提交应聘请求;
end
@endUMl

@startUMl
scale 3
title uc002_3甄选流程图
start
:管理员人员查看应聘信息;
:管理人员选择应聘人员;
if (工人是否应聘成功) then (成功)
:提示工人应聘成功;
:生成劳务合同;
:工人签订合同;
end
else (失败)
:提示工人应聘失败;
end
@endUML

@startUMl
scale 3
title uc002招聘类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "项目" <003>
class 004 as "岗位" <004>
class 005 as "招聘信息" <005>
class 006 as "应聘请求" <006>
class 007 as "劳务合同" <007>
class 008 as "专业" <008>
class 009 as "人员专业关系" <009>

001 : id
001 : 应聘()

002 : id
002 : 录入项目()
002 : 录入岗位()
002 : 录入招聘信息()
002 : 甄选录入人员()

003 : id
003 : 项目名称
003 : 施工单位

004 : id
004 : 岗位名称
004 : 项目id
004 : 专业id

005 : id
005 : 岗位id
005 : 应聘人数
005 : 应聘要求

006 : id
006 : 工人id
006 : 岗位id
006 : 招聘信息id

007 : id
007 : 用人单位id
007 : 工人id
007 : 岗位id
007 : 其它条款

008 : id
008 : 专业名称
008 : 是否特殊专业
008 : 最高等级

009 : id
009 : 专业id
009 : 工人id
009 : 专业等级

003 <-- 002: 录入项目
003 --> 004: 包含
004 --> 005: 产生
001 --> 006: 提交
006 -> 005: 应聘
006 -> 004: 应聘
002 --> 006: 甄选
001 -> 003: 签订
(001, 003) --> 007: 签订
009 -- 001
009 -- 008
008 -- 004
@endUML

@startUML
scale 3
title uc003培训用例
rectangle "实名制系统" {
    (uc004培训) as uc004
}
@endUML

@startUML
scale 3
title uc003培训流程
start
:管理员组织培训;
repeat
:工人参加培训;
:管理员考核工人;
if (考核结果) then (通过)
:结束培训;
:增加工人培训记录;
end
else (未通过)
@endUML

@startUMl
scale 3
title uc003培训类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "培训" <003>
class 004 as "工人培训关系表" <004>

001 : id
001 : 接受考核()

002 : id
002 : 组织培训()
002 : 发布考核()

003 : id
003 : 培训名称
003 : 培训类别

004 : id
004 : 工人id
004 : 培训id
004 : 考核结果

002 --> 003: 组织
001 -- 004
004 - 003
001 <- 002: 考核
@endUMl

@startUML
scale 3
title uc004考勤用例
rectangle "实名制系统" {
    (uc004考勤) as uc004
    (uc004_1扫码考勤) as uc004_1
    (uc004_2打卡考勤) as uc004_2
    (uc004_3地理信息考勤) as uc004_3
    (uc004_4手动补录) as uc004_4
    (uc004_2_1设备打卡) as uc004_2_1
    (uc004_2_2生物信息识别打卡) as uc004_2_2
}

uc004 --> uc004_1: 包含
uc004 --> uc004_2: 包含
uc004 --> uc004_3: 包含
uc004 --> uc004_4: 包含

uc004_2 --> uc004_2_1: 扩展
uc004_2 --> uc004_2_2: 扩展
@endUML

@startUML
scale 3
title uc004_1扫码考勤流程
start
:工人进入微信公众号;
:工人打开考勤小程序;
:工人选择扫码考勤;
:小程序生成考勤二维码;
:工人在扫码设备上进行扫码;
:增加工人考勤记录;
end
@endUML

@startUML
scale 3
title uc004_2打卡考勤流程
start
if (采用打卡方式) then (生物识别)
:录入生物识别信息;
:工人在生物识别设备上进行打卡;
else (设备打卡)
:发放打卡设备;
:工人使用打卡设备进行打卡;
endif
:增加工人考勤记录;
end
@endUML

@startUML
scale 3
title uc004_3地理信息考勤流程
start
:工人进入微信公众号;
:工人打开考勤小程序;
:工人选择地理信息考勤;
:小程序获取用户地理位置;
:增加工人考勤记录;
end
@endUML

@startUML
scale 3
title uc004_4手动补录流程
start
:管理员进入后台;
:管理员进行补录;
:增加工人考勤记录;
end
@endUML

@startUML
scale 3
title uc004考勤类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "考勤记录" <003>
class 004 as "考勤二维码" <004>
class 005 as "扫码设备" <005>
class 006 as "生物识别打卡设备" <006>
class 007 as "设备打卡设备" <007>

001 : id
001 : 生物识别信息
001 : 生成考勤二维码()
001 : 生物识别打卡()
001 : 设备打卡()
001 : 地理位置打卡()

002 : id
002 : 补录考勤()

003 : id
003 : 工人id
003 : 项目id
003 : 考勤方式
003 : 考勤时间
003 : 备注
003 : 增加考勤记录()

004 : id
004 : 生成时间
004 : 有效时间
004 : 状态

005 : id
005 : 扫码()

006 : id
006 : 识别生物信息()
006 : 打卡()

007 : id
007 : 识别设备信息()
007 : 打卡()

001 --> 004
001 --> 006
001 --> 005
001 --> 007

004 -> 005
005 --> 003
006 --> 003
007 --> 003
001 --> 003

003 <-- 002
@endUML

@startUML
scale 3
title uc005工资支付用例
rectangle "实名制系统" {
    (uc005工资支付) as uc005
    (uc005_1生成工资单) as uc005_1
    (uc005_2结算工资) as uc005_2
}

uc005 --> uc005_1: 包含
uc005 --> uc005_2: 包含
uc005_1 -> uc005_2
@endUML

@startUML
scale 3
title uc005_1生成工资单流程图
start
:管理员制定工资结算规则;
:系统根据结算规则与考勤记录生成工资单;
:系统生成工资结算订单;
end
@endUML

@startUML
scale 3
title uc005_2结算工资流程图
start
:管理员根据工资单打款;
:管理员发起确认收款;
:工人确认收款;
:系统完结工资结算订单;
end
@endUMl

@startUML
scale 3
title uc005结算工资类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "工资结算规则" <003>
class 004 as "工资单" <004>
class 005 as "工资结算订单" <005>
class 006 as "确认收款信息" <006>

001 : id
001 : 确认收款()

002 : id
002 : 录入工资结算规则()
002 : 发起确认收款()

003 : id
003 : 项目id
003 : 岗位id
003 : 工人id
003 : 结算周期
003 : 工资
003 : 起算时间

004 : id
004 : 岗位id
004 : 工人id
004 : 结算金额
004 : 结算时间

005 : id
005 : 工资单id
005 : 订单状态

006 : id
006 : 工资单id
006 : 银行流水
006 : 确认结果

002 --> 003
003 --> 004
001 --> 006
006 -> 004
004 --> 005
006 --> 005
@endUML

@startUML
scale 3
title uc006离岗用例
rectangle "实名制系统" {
    (uc006离岗) as uc006
    (uc006_1辞职) as uc006_1
    (uc006_2辞退) as uc006_2
}

uc006 --> uc006_1: 扩展
uc006 --> uc006_2: 扩展
@endUML

@startUMl
scale 3
title uc006离岗流程图
start
if (离岗方式) then (正常离岗)
:离岗条件达成;
:工人确认离岗;
elseif () then (辞职)
:工人发起辞职;
:管理员审核辞职;
else (辞退)
:管理员发起辞退;
:工人确认辞退;
endif
:工人进行技术交底;
:管理员确认技术交底;
end
@endUML

@startUML
scale 3
title uc006离岗类图
class 001 as "工人" <001>
class 002 as "管理员" <002>
class 003 as "离岗条件" <003>
class 004 as "辞职请求" <004>
class 005 as "辞退请求" <005>

001 : id
001 : 提交辞职请求()
001 : 确认辞退请求()

002 : id
002 : 提交辞退请求()
002 : 确认辞职请求()
002 : 确认离岗()

003 : id
003 : 判断离岗条件()

004 : id
004 : 工人id
004 : 项目id
004 : 岗位id
004 : 状态

005 : id
005 : 工人id
005 : 岗位id
005 : 项目id
005 : 状态

003 - 001
001 -- 004
002 -- 005
001 -- 005
002 -- 004
@endUMl